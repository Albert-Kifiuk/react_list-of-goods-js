{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABETICAL","SORT_BY_LENGTH","App","useState","sortField","setSortField","isReversed","setIsReversed","preparedGoods","goods","sort","a","b","localeCompare","length","reverse","getPreparedGoods","className","onClick","type","classNames","map","good","index","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAuB,eACvBC,EAAiB,SAyBhB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EA3BR,SAA0BC,EAA1B,GAA6D,IAA1BL,EAAyB,EAAzBA,UAAWE,EAAc,EAAdA,WACtCE,EAAa,YAAOC,GAE1B,OAAQL,GACN,KAAKJ,EACHQ,EAAcE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC7C,MAEF,KAAKX,EACHO,EAAcE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAW9C,OAJIR,GACFE,EAAcO,UAGTP,EAOeQ,CAAiBjB,EAAiB,CACtDK,YACAE,eAQF,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMb,EAAaL,IAC5BmB,KAAK,SACLF,UAAWG,IAAW,SAAU,UAAW,CACzC,WAAYhB,IAAcJ,IAJ9B,iCAUA,wBACEkB,QAAS,kBAAMb,EAAaJ,IAC5BkB,KAAK,SACLF,UAAWG,IAAW,SAAU,aAAc,CAC5C,WAAYhB,IAAcH,IAJ9B,4BAUA,wBACEiB,QAAS,kBAAMX,GAAeD,IAC9Ba,KAAK,SACLF,UAAWG,IAAW,SAAU,aAAc,CAC5C,YAAad,IAJjB,sBAUEF,GAAaE,IACb,wBACEY,QAxCQ,WAChBb,EAAa,IACbE,GAAc,IAuCNY,KAAK,SACLF,UAAWG,IAAW,SAAU,YAAa,CAC3C,WAAYhB,GAAaE,IAJ7B,sBAYJ,6BACGE,EAAca,KAAI,SAACC,EAAMC,GAAP,OACjB,oBAAe,UAAQ,OAAvB,SACGD,GADMA,YCvGnBE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4ecfee92.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABETICAL = 'alphabetical';\nconst SORT_BY_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, { sortField, isReversed }) {\n  const preparedGoods = [...goods];\n\n  switch (sortField) {\n    case SORT_BY_ALPHABETICAL:\n      preparedGoods.sort((a, b) => a.localeCompare(b));\n      break;\n\n    case SORT_BY_LENGTH:\n      preparedGoods.sort((a, b) => a.length - b.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n\n  const preparedGoods = getPreparedGoods(goodsFromServer, {\n    sortField,\n    isReversed,\n  });\n\n  const resetList = () => {\n    setSortField('');\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SORT_BY_ALPHABETICAL)}\n          type=\"button\"\n          className={classNames('button', 'is-info', {\n            'is-light': sortField !== SORT_BY_ALPHABETICAL,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_BY_LENGTH)}\n          type=\"button\"\n          className={classNames('button', 'is-success', {\n            'is-light': sortField !== SORT_BY_LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setIsReversed(!isReversed)}\n          type=\"button\"\n          className={classNames('button', 'is-warning', {\n            'is-light': !isReversed,\n          })}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed) && (\n          <button\n            onClick={resetList}\n            type=\"button\"\n            className={classNames('button', 'is-danger', {\n              'is-light': sortField || isReversed,\n            })}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {preparedGoods.map((good, index) => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}